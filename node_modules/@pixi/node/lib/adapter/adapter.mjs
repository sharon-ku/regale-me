import { Request, fetch, Response } from 'cross-fetch';
import fs from 'fs';
import createGLContext from 'gl';
import { utils, settings } from '@pixi/core';
export { settings } from '@pixi/core';
import { NodeCanvasElement } from './NodeCanvasElement.mjs';

const NodeAdapter = {
  createCanvas: (width, height) => new NodeCanvasElement(width, height),
  getWebGLRenderingContext: () => createGLContext(1, 1),
  getNavigator: () => ({ userAgent: "node" }),
  getBaseUrl: () => process.cwd(),
  getFontFaceSet: () => null,
  fetch: (url, options) => {
    const request = new Request(url, options);
    if (utils.path.isUrl(request.url)) {
      return fetch(url, request);
    }
    return new Promise((resolve, reject) => {
      const filePath = utils.path.normalize(request.url);
      if (!fs.existsSync(filePath)) {
        reject(`File not found: ${filePath}`);
      }
      const readStream = fs.createReadStream(filePath);
      readStream.on("open", function() {
        resolve(new Response(readStream, {
          url: request.url,
          status: 200,
          statusText: "OK",
          size: fs.statSync(filePath).size,
          timeout: request.timeout
        }));
      });
    });
  }
};
settings.ADAPTER = NodeAdapter;

export { NodeAdapter };
//# sourceMappingURL=adapter.mjs.map
